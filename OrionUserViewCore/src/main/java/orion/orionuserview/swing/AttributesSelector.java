/*
 * AttributesSelector.java
 *
 * Created on Oct 8, 2010, 4:15:46 PM
 */
package orion.orionuserview.swing;

import java.sql.SQLException;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ToolTipManager;
import javax.swing.tree.DefaultTreeModel;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;
import orion.orionuserview.EntityDef;

/**
 *
 * @author sl
 */
public class AttributesSelector extends javax.swing.JPanel {

    private static final Map<String, Icon> treeNodeIcons = new HashMap<String, Icon>();
    private static final ResourceMap resourceMap = Application.getInstance().getContext().getResourceMap(AttributesSelector.class);
    private Globals globals;

    static {
        addDataTypeIcon("Boolean");
        addDataTypeIcon("DateTime");
        addDataTypeIcon("Float");
        addDataTypeIcon("Number");
        addDataTypeIcon("Text");
        addDataTypeIcon("Unknown");
        addDataTypeIcon("OneTable");
        addDataTypeIcon("ManyTables");
    }

    private static void addDataTypeIcon(String name) {
        treeNodeIcons.put(name, resourceMap.getIcon("DataTypeIcon." + name));
    }

    /** Creates new form AttributesSelector */
    public AttributesSelector(Globals globals) {
        this.globals = globals;
        initComponents();
        ToolTipManager.sharedInstance().registerComponent(baseTree);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        entityControl = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        baseTree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jSplitPane1.setDividerLocation(600);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 425));

        jToolBar1.setFloatable(false);
        jToolBar1.setName("jToolBar1"); // NOI18N

        entityControl.setName("entityControl"); // NOI18N
        entityControl.setRenderer(new AttributeDefListCellRenderer(globals));
        entityControl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                entityControlItemStateChanged(evt);
            }
        });
        jToolBar1.add(entityControl);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        baseTree.setModel(null);
        baseTree.setCellRenderer(new AttributeDefTreeCellRenderer(treeNodeIcons, globals));
        baseTree.setName("baseTree"); // NOI18N
        jScrollPane1.setViewportView(baseTree);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 425, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(397, Short.MAX_VALUE)))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(357, 425));
        jPanel2.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 94, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 425, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void entityControlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_entityControlItemStateChanged
        updateTreeModel();
    }//GEN-LAST:event_entityControlItemStateChanged

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try {
            List<EntityDef> entityDefs = new ArrayList(globals.getDatabaseDef().getRootRelationDefs());
            Collections.sort(entityDefs, new Comparator<EntityDef>() {

                @Override
                public int compare(EntityDef o1, EntityDef o2) {
                    return UIUtils.attributeDefPresentableNameForAdmin(globals, o1).compareToIgnoreCase(UIUtils.attributeDefPresentableNameForAdmin(globals, o2));
                }
            });
            entityControl.setModel(new DefaultComboBoxModel(entityDefs.toArray()));
            //entityControl.setSelectedIndex(0);
            updateTreeModel();
        } catch (SQLException ex) {
            globals.addError("Ошибка получения списка сущностей");
        }
    }//GEN-LAST:event_formComponentShown
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree baseTree;
    private javax.swing.JComboBox entityControl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private void updateTreeModel() {
        baseTree.setModel(new DefaultTreeModel(new AttributeDefTreeNode((EntityDef) entityControl.getSelectedItem()), true));
    }

}
